{"version":3,"sources":["Modules/Starlink/Starlink.module.scss","Queries/StarlinkQuery.ts","Modules/Starlink/Starlink.tsx"],"names":["module","exports","StarlinkQuery","query","longitude","$ne","options","limit","Starlink","useState","undefined","starlink","setStarlink","useEffect","interval","setInterval","axios","post","then","res","data","catch","err","clearInterval","gData","docs","map","tle","spaceTrack","TLE_LINE0","substring","length","TLE_LINE1","TLE_LINE2","latLonObj","getLatLngObj","push","lat","lng","alt","radius","color","globe","globeImageUrl","pointsData","pointAltitude","pointColor","className","styles"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,SAAW,6B,qGCUdC,EAXO,CACpBC,MAAO,CACLC,UAAW,CACTC,IAAK,OAGTC,QAAS,CACPC,MAAO,M,kBC6EIC,UAlEE,WAAO,IAAD,EACWC,wBAC9BC,GAFmB,mBACdC,EADc,KACJC,EADI,KAKrBC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BC,IACGC,KACC,+CACAf,GAEDgB,MAAK,SAACC,GACLP,EAAYO,EAAIC,SAEjBC,OAAM,SAACC,SACT,KAEH,OAAO,WACLC,cAAcT,MAEf,IAEH,IAAMU,EAAiB,GACnBb,GACFA,EAASc,KAAKC,KAAI,SAACf,GACjB,IAKMgB,GALI,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAUiB,WAAWC,UAAUC,UAC1C,EADW,OAEXnB,QAFW,IAEXA,OAFW,EAEXA,EAAUiB,WAAWC,UAAUE,SAK/B,OADA,OAEApB,QAFA,IAEAA,OAFA,EAEAA,EAAUiB,WAAWI,WACrB,MAHA,OAIArB,QAJA,IAIAA,OAJA,EAIAA,EAAUiB,WAAWK,WAEjBC,EAAYC,uBAAaR,GAE/BH,EAAMY,KAAK,CACTC,IAAKH,EAAUG,IACfC,IAAKJ,EAAUI,IACfC,IAAK,GACLC,OAAQ,IACRC,MAAO,aAKb,IAAIC,EAAQ,6BAaZ,OAXIlB,EAAMO,OAAS,IACjBW,EACE,cAAC,IAAD,CACEC,cAAc,sDACdC,WAAYpB,EACZqB,cAAe,KACfC,WAAW,WAKV,qBAAKC,UAAWC,IAAOxC,SAAvB,SAAkCkC","file":"static/js/12.06e335ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Starlink\":\"Starlink_Starlink__3XQrk\"};","const StarlinkQuery = {\r\n  query: {\r\n    longitude: {\r\n      $ne: null,\r\n    },\r\n  },\r\n  options: {\r\n    limit: 1000,\r\n  },\r\n};\r\n\r\nexport default StarlinkQuery;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { getLatLngObj } from \"tle.js\";\r\nimport IStarlink from \"../../Models/IStarlink\";\r\nimport Globe from \"react-globe.gl\";\r\nimport * as THREE from \"three\";\r\nimport IQueryResult from \"../../Models/IQueryResult\";\r\nimport StarlinkQuery from \"../../Queries/StarlinkQuery\";\r\n\r\nimport styles from \"./Starlink.module.scss\";\r\ninterface ITest {\r\n  lat: number;\r\n  lng: number;\r\n  alt: number;\r\n  radius: number;\r\n  color: string;\r\n}\r\n\r\nconst Starlink = () => {\r\n  const [starlink, setStarlink] = useState<IQueryResult<IStarlink> | undefined>(\r\n    undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      axios\r\n        .post<IQueryResult<IStarlink>>(\r\n          \"https://api.spacexdata.com/v4/starlink/query\",\r\n          StarlinkQuery\r\n        )\r\n        .then((res) => {\r\n          setStarlink(res.data);\r\n        })\r\n        .catch((err) => {});\r\n    }, 3000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const gData: ITest[] = [];\r\n  if (starlink) {\r\n    starlink.docs.map((starlink) => {\r\n      const TLE0 = starlink?.spaceTrack.TLE_LINE0.substring(\r\n        2,\r\n        starlink?.spaceTrack.TLE_LINE0.length\r\n      );\r\n\r\n      const tle =\r\n        TLE0 +\r\n        \" \\n\" +\r\n        starlink?.spaceTrack.TLE_LINE1 +\r\n        \"\\n\" +\r\n        starlink?.spaceTrack.TLE_LINE2;\r\n\r\n      const latLonObj = getLatLngObj(tle);\r\n\r\n      gData.push({\r\n        lat: latLonObj.lat,\r\n        lng: latLonObj.lng,\r\n        alt: 0.9,\r\n        radius: 0.01,\r\n        color: \"white\",\r\n      });\r\n    });\r\n  }\r\n\r\n  let globe = <></>;\r\n\r\n  if (gData.length > 0) {\r\n    globe = (\r\n      <Globe\r\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\r\n        pointsData={gData}\r\n        pointAltitude={0.001}\r\n        pointColor=\"color\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return <div className={styles.Starlink}>{globe}</div>;\r\n};\r\n\r\nexport default Starlink;\r\n"],"sourceRoot":""}