{"version":3,"sources":["Modules/Starlink/StarlinkInfo/StarlinkInfo.module.scss","Modules/Starlink/Starlink.module.scss","Queries/StarlinkQuery.ts","Store/Starlink/actions.ts","Modules/Starlink/StarlinkInfo/StarlinkInfo.tsx","Modules/Starlink/Starlink.tsx"],"names":["module","exports","StarlinkQuery","query","longitude","$ne","options","pagination","populate","path","select","name","date_utc","flight_number","fetchStarlink","dispatch","type","FETCH_STARLINK_START","axios","post","then","res","newStarlink","data","FETCH_STARLINK_SUCCESS","payload","catch","err","error","FETCH_STARLINK_FAIL","StarlinkInfo","starlink","close","div","initial","animate","exit","variants","pageVariantsAnim","className","styles","onClick","icon","Left","InfoContainer","NameWrapper","ValuesWrapper","label","version","Number","height_km","toFixed","velocity_kms","Right","to","launch","LaunchInfoWrapper","Date","toDateString","React","memo","connect","state","starlinks","loadingStarlinks","loading","onFetchStarlink","props","useState","showStarlinkInfo","setShowStarlinkInfo","starlinkInfoData","setStarlinkInfoData","useEffect","interval","setInterval","clearInterval","gData","docs","forEach","tle","spaceTrack","TLE_LINE0","substring","length","TLE_LINE1","TLE_LINE2","latLonObj","getLatLngObj","push","lat","lng","alt","radius","color","OBJECT_NAME","globe","globeImageUrl","pointsData","pointAltitude","pointColor","pointLabel","showGraticules","pointRadius","onPointClick","point","event","console","log","showStarlinkInfoHandler","Starlink","target","rel","href"],"mappings":"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","file":"static/js/10.5fd8c246.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"StarlinkInfo\":\"StarlinkInfo_StarlinkInfo__2Boxd\",\"Left\":\"StarlinkInfo_Left__1w7cp\",\"InfoContainer\":\"StarlinkInfo_InfoContainer__2ceNH\",\"NameWrapper\":\"StarlinkInfo_NameWrapper__1Kwc8\",\"ValuesWrapper\":\"StarlinkInfo_ValuesWrapper__1BahA\",\"Right\":\"StarlinkInfo_Right__VSRgz\",\"LaunchInfoWrapper\":\"StarlinkInfo_LaunchInfoWrapper__Qzx5L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Starlink\":\"Starlink_Starlink__3XQrk\",\"StarlinkInfo\":\"Starlink_StarlinkInfo__pjfNh\",\"SpinnerWrapper\":\"Starlink_SpinnerWrapper__14jJi\"};","const StarlinkQuery = {\r\n  query: {\r\n    longitude: {\r\n      $ne: null,\r\n    },\r\n  },\r\n  options: {\r\n    pagination: false,\r\n    populate: [\r\n      {\r\n        path: \"launch\",\r\n        select: {\r\n          name: 1,\r\n          date_utc: 1,\r\n          flight_number: 1,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nexport default StarlinkQuery;\r\n","import axios from \"axios\";\r\nimport IQueryResult from \"../../Models/IQueryResult\";\r\nimport IStarlink from \"../../Models/IStarlink\";\r\nimport StarlinkQuery from \"../../Queries/StarlinkQuery\";\r\nimport {\r\n  FETCH_STARLINK_START,\r\n  FETCH_STARLINK_SUCCESS,\r\n  FETCH_STARLINK_FAIL,\r\n  StarlinkTypes,\r\n} from \"./types\";\r\n\r\nexport function fetchStarlinkStart(): StarlinkTypes {\r\n  return {\r\n    type: FETCH_STARLINK_START,\r\n  };\r\n}\r\n\r\nexport function fetchStarlinkSuccess(\r\n  newStarlink: IQueryResult<IStarlink>\r\n): StarlinkTypes {\r\n  return {\r\n    type: FETCH_STARLINK_SUCCESS,\r\n    payload: newStarlink,\r\n  };\r\n}\r\n\r\nexport function fetchStarlinkFail(error: string): StarlinkTypes {\r\n  return {\r\n    type: FETCH_STARLINK_FAIL,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport const fetchStarlink = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchStarlinkStart());\r\n\r\n    axios\r\n      .post<IQueryResult<IStarlink>>(\r\n        \"https://api.spacexdata.com/v4/starlink/query\",\r\n        StarlinkQuery\r\n      )\r\n      .then((res) => {\r\n        dispatch(fetchStarlinkSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchStarlinkFail(err));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { motion } from \"framer-motion\";\r\n\r\n//MODELS\r\nimport IGlobePoint from \"../../../Models/IGlobePoint\";\r\n\r\n//STYLES\r\nimport styles from \"./StarlinkInfo.module.scss\";\r\nimport { pageVariantsAnim } from \"../../../Animations/Animations_motion\";\r\n\r\nconst StarlinkInfo = ({ starlink, close }: starlinkProps) => {\r\n  return (\r\n    <motion.div\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariantsAnim}\r\n      className={styles.StarlinkInfo}>\r\n      <FontAwesomeIcon onClick={close} icon=\"times\" />\r\n      <div className={styles.Left}>\r\n        <h2>STARLINK</h2>\r\n        <div className={styles.InfoContainer}>\r\n          <div className={styles.NameWrapper}>\r\n            <h4>NAME</h4>\r\n            <h4>VERSION</h4>\r\n            <h4>HEIGHT</h4>\r\n            <h4>VELOCITY</h4>\r\n          </div>\r\n          <div className={styles.ValuesWrapper}>\r\n            <h4>{starlink.label}</h4>\r\n            <h4>{starlink.version}</h4>\r\n            <h4>{Number(starlink.height_km).toFixed(2)} km</h4>\r\n            <h4>{Number(starlink.velocity_kms).toFixed(2)} kms</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.Right}>\r\n        <h2>LAUNCH</h2>\r\n        <Link to={`launch/${starlink.launch?.flight_number}`}>\r\n          <div className={styles.LaunchInfoWrapper}>\r\n            <h3>{starlink.launch?.name}</h3>\r\n            <h4>\r\n              {new Date(starlink.launch?.date_utc).toDateString()} | #\r\n              {starlink.launch?.flight_number}\r\n            </h4>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\ntype starlinkProps = {\r\n  starlink: IGlobePoint;\r\n  close: () => void;\r\n};\r\n\r\nexport default React.memo(StarlinkInfo);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getLatLngObj } from \"tle.js\";\r\nimport Globe from \"react-globe.gl\";\r\nimport { connect } from \"react-redux\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\n//QUERieS\r\nimport { fetchStarlink } from \"../../Store/Starlink/actions\";\r\nimport StarlinkInfo from \"./StarlinkInfo/StarlinkInfo\";\r\n\r\n//STYLES\r\nimport styles from \"./Starlink.module.scss\";\r\nimport { pageVariantsAnim } from \"../../Animations/Animations_motion\";\r\n\r\n//MODELS\r\nimport IGlobePoint from \"../../Models/IGlobePoint\";\r\n\r\nconst Starlink = (props) => {\r\n  const { onFetchStarlink, starlinks } = props;\r\n  const [showStarlinkInfo, setShowStarlinkInfo] = useState(false);\r\n  const [starlinkInfoData, setStarlinkInfoData] = useState<any>({});\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      onFetchStarlink();\r\n    }, 3000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [onFetchStarlink]);\r\n\r\n  const closeStarlinkInfoHandler = () => {\r\n    setShowStarlinkInfo(false);\r\n  };\r\n\r\n  const gData: IGlobePoint[] = [];\r\n\r\n  starlinks.docs.forEach((starlink) => {\r\n    const TLE0 = starlink?.spaceTrack.TLE_LINE0.substring(\r\n      2,\r\n      starlink?.spaceTrack.TLE_LINE0.length\r\n    );\r\n\r\n    const tle =\r\n      TLE0 +\r\n      \" \\n\" +\r\n      starlink?.spaceTrack.TLE_LINE1 +\r\n      \"\\n\" +\r\n      starlink?.spaceTrack.TLE_LINE2;\r\n\r\n    const latLonObj = getLatLngObj(tle);\r\n\r\n    gData.push({\r\n      lat: latLonObj.lat,\r\n      lng: latLonObj.lng,\r\n      alt: 0.9,\r\n      radius: 0.01,\r\n      color: \"white\",\r\n      label: starlink.spaceTrack.OBJECT_NAME,\r\n      launch: starlink.launch,\r\n      version: starlink.version,\r\n      velocity_kms: starlink.velocity_kms,\r\n      height_km: starlink.height_km,\r\n    });\r\n  });\r\n\r\n  let globe = <></>;\r\n\r\n  const showStarlinkInfoHandler = (point: any) => {\r\n    console.log(point);\r\n    setStarlinkInfoData(point);\r\n    setShowStarlinkInfo(true);\r\n  };\r\n\r\n  if (gData) {\r\n    globe = (\r\n      <Globe\r\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-night.jpg\"\r\n        pointsData={gData}\r\n        pointAltitude={0.001}\r\n        pointColor=\"color\"\r\n        pointLabel=\"label\"\r\n        showGraticules\r\n        pointRadius={0.35}\r\n        onPointClick={(point, event) => showStarlinkInfoHandler(point)}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial=\"initial\"\r\n      animate=\"in\"\r\n      exit=\"out\"\r\n      variants={pageVariantsAnim}\r\n      className={styles.Starlink}>\r\n      <div className={styles.StarlinkInfo}>\r\n        <h2>STARLINK</h2>\r\n        <h3>\r\n          <b>Starlink</b> is a satellite internet constellation being\r\n          constructed by{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"www.spacex.com\">\r\n            SpaceX\r\n          </a>{\" \"}\r\n          providing satellite Internet access.\r\n        </h3>\r\n        <h4>Starlinks on the orbit: {props.starlinks.docs.length}</h4>\r\n      </div>\r\n      {globe}\r\n      <AnimatePresence>\r\n        {showStarlinkInfo && (\r\n          <StarlinkInfo\r\n            starlink={starlinkInfoData}\r\n            close={closeStarlinkInfoHandler}\r\n          />\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    starlinks: state.starlink.starlinks,\r\n    loadingStarlinks: state.starlink.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onFetchStarlink: () => dispatch(fetchStarlink()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Starlink);\r\n"],"sourceRoot":""}